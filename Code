import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
print("                                  EMPLOYEE REGISTRATION PROCESS     ")
print("-------------------------------------------------------------------------------")
print()


a = {
    'Emp Id': pd.Series([101, 102, 103, 104, 105, 106, 107, 108, 109, 110,111,112,113,114,115]),
    'Emp Name': pd.Series(["Khasyap", "Surya", "Saketh", "Konakalla", "Hari", "Pavan", "Sai", "Krian", "Mangaraju", "Akbar","Sri Nikhil","Guru","Balaji","Veera","Venkataswarulu"]),
    'Emp Age': pd.Series([26, 35, 24, 23, 32, 31, 30, 45, 35, 36,35,24,37,48,47]),
    'Emp Email': pd.Series(['khasyap@gmail.com','surya@gmail.com','saketh@gmail.com','konakalla@gmail.com','hari@gmail.com','pavan@gmail.com','sai@gmail.com','krian@gmail.com','mangaraju@gmail.com','akbar@gmail.com','srinikhil@gmail.com','guru@gmail.com','balaji@gmail.com','veera@gmail.com','venkataswarulu@gmail.com']),
    'Emp Phone No': pd.Series([7645298562,6897234590,7465982102,9812763405,6712984350,9977332170,9753124680,9632468714,6989453201,9032458701,7645298562,6897234590,7465982102,9812763405,6712984350]),
    'Emp Gender': pd.Series(["Male","Male","Male","Male","Male","Male","Male","Male","Male","Male","Male","Male","Male","Male","Male"]),
    'Emp Address': pd.Series(["yadlalinigaiah","GBG Road","Powerpet","RR Pet","KR Market","NTR Road","Lodge Center","Burripalem","Hi-Tech city","Brodipet","Pallkendram","Venkatapuram","Temple Road","Unguturu","Old Bus Stop"]),
    'Emp City': pd.Series(["Tenali","Chintalapudi","Eluru","Eluru","Vijayawada","Vijayawada","Gunutr","Tenali","Hyderabad","Guntur","Pedamakkena","Venkatapuram","East Venkatapuram","14 Mile","Guntur"]),
    'Emp Pincode': pd.Series([522202,534460,534002,534006,520001,52001,522007,522201,500081,522001,522403,523247,523247,522016,5220001]),
    'Emp Qualification': pd.Series(["B.Tech","B.Sc","ITI","MPCS","B.Com","MCA","M.Tech","BA","BBA","BCA","CSE","CSC","CSIT","BCA","CA"]),
    'Emp Experience': pd.Series([1,2,3,8,6,2,1,4,3,5,12,10,2,1,3]),
    'Emp Type': pd.Series(["Freelancer","Peremant","Temporary","Freelancer","Peremant","Temporary","Peremant","Freelancer","Temporary","Peremant","Temporary","Peremant","Freelancer","Temporary","Temporary"]),
    'Emp Salary': pd.Series([50000,15000,12000,10000,35000,75000,35000,25000,12000,50000,35000,30000,25000,20000,15000]),
    'Emp Work Mode': pd.Series(["On Site","WFH","On Site","Hybrid","WFH","On Site","WFH","Hybrid","On Site","WFH","On Site","Remote","On Site","WFH","Hybrid"]),
    'Emp Marital Status': pd.Series(["Married","UnMarried","UnMarried","UnMarried","Married","UnMarried","Married","UnMarried","Married","Married","UnMarried","Married","UnMarried","Married","UnMarried"]),
    'Emp Role': pd.Series(["Develpoer","Support","Sales","Jr.Develpoer","Support","Sql Develpoer","Java Jr.Develpoer","Power BI Develpoer","Team Leader","Manager","Develpoer","Team Member","Tester","Support","Front-End"])
}

b = pd.DataFrame(a)
b.index=['Emp1','Emp2','Emp3','Emp4','Emp5','Emp6','Emp7','Emp8','Emp9','Emp10','Emp11','Emp12','Emp13','Emp14','Emp15']
print(b)
b
while True:
    print("\nDo you want to do Perform this Operations\n1. CRUD\n2. Finding Relations\n3. Basic Operations\n4. Data Visulization\n5. Exit")
    c = int(input("Enter the value: "))

    if c == 1:
        while True:
            print("\n1. Create \n2. Read \n3. Update \n4. Delete \n5. Exit CRUD Operations")

            d = int(input("Enter the value: "))

            if d == 1:
                print("Create operation")
                while True:
                    print("\nWhat would you like to create?")
                    print("1. Add Row")
                    print("2. Add Column")
                    print("3. Return to CRUD Menu")

                    create_choice = int(input("Enter the value: "))

                    if create_choice == 1:  
                        new_row = {}
                        for col in b.columns:
                            new_row[col] = input(f"Enter {col}: ")    
                        b = pd.concat(
                            [b, pd.DataFrame([new_row])], ignore_index=True)
                        print("Row added successfully.")
                        print("After Create")
                        print(b)
                        continue  

                    elif create_choice == 2:  
                        new_col_name = input("Enter the name of the new column: ")
                        default_value = input("Enter the default value for the new column: ")
                        b[new_col_name] = default_value
                        print("Column added successfully.")
                        print(b)
                        continue

                    elif create_choice == 3:
                        break

                    else:
                        print("Enter a correct value. You entered a number out of range (1-3).")
                        continue  

            elif d == 2:
                print("Read operation")
                
                while True:
                    print("\nWhat would you like to read?")
                    print("1. View Entire DataFrame")
                    print("2. View Specific Rows")
                    print("3. View Specific Columns")
                    print("4. Return to CRUD Menu")

                    read_choice = int(input("Enter the value: "))

                    if read_choice == 1:
                        print("Displaying entire DataFrame:")
                        print(b)
                        continue  

                    elif read_choice == 2:
                        start_row = int(input("Enter the starting row index (0-based): "))
                        end_row = int( input("Enter the ending row index (exclusive, 0-based): "))
                        print(f"Displaying rows from index {start_row} to {end_row-1}:")
                        print(b.iloc[start_row:end_row])
                        continue  
                    elif read_choice == 3:  
                        cols = input("Enter the column names separated by commas: ").split(',')
                        cols = [col.strip()for col in cols]  
                        invalid_cols = [
                            col for col in cols if col not in b.columns]
                        if invalid_cols:
                            print(f"Invalid column names: {', '.join(invalid_cols)}")
                        else:
                            print(f"Displaying selected columns: {', '.join(cols)}")
                            print(b[cols])
                        continue 

                    elif read_choice == 4:
                        break  

                    else:
                        print("Enter a correct value. You entered a number out of range (1-4).")
                        continue 

            elif d == 3:
                print("Update operation")
               
                while True:
                    print("\nWhat would you like to update?")
                    print("1. Update Row")
                    print("2. Update Column")
                    print("3. Return to CRUD Menu")

                    update_choice = int(input("Enter the value: "))

                    if update_choice == 1: 
                        row_index = int(input("Enter the index of the row to update (0-based): "))
                        if 0 <= row_index < len(b):
                            for col in b.columns:
                                new_value = input( f"Enter new value for {col} (or leave blank to keep current value): ")
                                if new_value:
                                    b.at[row_index, col] = new_value
                            print(f"Row {row_index} updated successfully.")
                            print(b)
                        else:
                            print(f"Invalid row index: {row_index}")
                        continue 

                    elif update_choice == 2:  
                        col_name = input("Enter the name of the column to update: ")
                        if col_name in b.columns:
                            for i in range(len(b)):
                                new_value = input(f"Enter new value for {col_name} in row {i} (or leave blank to keep current value): ")
                                if new_value:
                                    b.at[i, col_name] = new_value
                            print(f"Column '{col_name}' updated successfully.")
                            print(b)
                        else:
                            print(f"Column '{col_name}' does not exist.")
                        continue  
                    elif update_choice == 3: 
                        break  

                    else:
                        print("Enter a correct value. You entered a number out of range (1-3).")
                        continue  

            elif d == 4:
                print("Delete operation")

               
                while True:
                    print("\nWhat would you like to delete?")
                    print("1. Delete Row")
                    print("2. Delete Column")
                    print("3. Return to CRUD Menu")

                    delete_choice = int(input("Enter the value: "))

                    if delete_choice == 1: 
                        row_index = int(input("Enter the index of the row to delete (0-based): "))
                        if 0 <= row_index < len(b):
                            b = b.drop(index=row_index).reset_index(drop=True)
                            print(f"Row {row_index} deleted successfully.")
                            print(b)
                        else:
                            print(f"Invalid row index: {row_index}")
                        continue  

                    elif delete_choice == 2:  
                        col_name = input("Enter the name of the column to delete: ")
                        if col_name in b.columns:
                            b = b.drop(columns=[col_name])
                            print(f"Column '{col_name}' deleted successfully.")
                            print(b)
                        else:
                            print(f"Column '{col_name}' does not exist.")
                        continue  

                    elif delete_choice == 3:  
                        break  

                    else:
                        print( "Enter a correct value. You entered a number out of range (1-3).")
                        continue  

            elif d == 5:
                print("Exiting CRUD Operations.")
                break 

            else:
                print("Enter a correct value. You entered a number out of range (1-5).")
                continue  

    elif c == 2:
        while True:
            print("\nDo you want to perform Finding Relations?\n1. Correlation\n2. Covariance\n3. Exit ")
            e = int(input("Enter the value: "))
            if e==1:
                f=b['Emp Id'].corr(b['Emp Age'])
                j=b['Emp Id'].corr(b['Emp Experience'])
                k=b['Emp Age'].corr(b['Emp Experience'])
                print(f)
                print(j)
                print(k)
                
            elif e==2:
                g=b['Emp Experience'].cov(b['Emp Age'])
                l=b['Emp Id'].cov(b['Emp Experience'])
                print(g)
                print(l)
            elif e==3:
                break
            else:
                print("Enter a correct value. You entered a number out of range (1-3).")
                continue
    elif c==3:
        while True:
            print("\nDo you want to perform Basic operations?\n1. Describe\n2. Info\n3. Head \n4. Tail\n5. Rank\n6. Filter\n7. GroupBy\n8. Aggregate\n9. Exit")
            h = int(input("Enter the value: "))
            if h==1:
                print(b.describe())
                continue
            elif h==2:
                print(b.info())
                continue
            elif h==3:
                print(b.head())
                continue
            elif h==4:
                print(b.tail())
                continue
            elif h==5:
                print(b.rank())
                continue
            elif h==6:
                print(b.filter(['Emp Id','Emp Name','Emp Type']))
                continue
            elif h==7:
                print(b.groupby(['Emp Id','Emp Qualification','Emp Work Mode']))
                continue
            elif h==8:
                print(b.aggregate(['sum']))
                print()
                print(b.aggregate(['min']))
                print()
                print(b.aggregate(['max']))
                print()
                print(b.aggregate(['count']))
                print()
                continue
            elif h==9:
                break
            else:
                print("Enter a correct value. You entered a number out of range (1-9).")
                continue
    elif c==4:
        while True:
            print("                                     Data Visulization                         ")
            print("1. UniVariate\n2. BiVariate\n3. MultiVariate\n4. Scatter\n5. Bar Graph\n6. Bar Graph Horizantal\n7. Pie Chart\n8. Exit")
            i = int(input("Enter the value: "))
            if i==1:
                plt.plot(b['Emp Experience'],linestyle="dashed",marker="o",linewidth="2",label="Emp Experience")
                plt.title(" Employee Experience")
                plt.ylabel("Employee Experience")
                plt.xticks(rotation="vertical")
                plt.grid()
                plt.show()
                continue
            elif i==2:
                plt.plot(b['Emp Id'],b['Emp Age'],linestyle="solid",marker="*",linewidth="2",color="green",label="Emp Id & Age")
                plt.title("Employee Age")
                plt.xlabel("Employee Id")
                plt.ylabel("Employee Age")
                
                plt.grid()
                plt.xticks(rotation="vertical")
                #plt.yticks(rotation="vertical")
                plt.show()
                continue
            elif i==3:
                plt.plot(b['Emp Id'],b['Emp Age'],linestyle="dashdot",marker="d",linewidth="2",color="red",label="Emp Id & Age")
                plt.plot(b['Emp Id'],b['Emp Salary'],linestyle="dotted",marker="o",linewidth="2",color="blue",label="Emp Id & Salary")
                plt.title("Employee Age with their Salaries")
                plt.xlabel("Employee Id & Age")
                plt.ylabel("Employee Id & Salary")
                plt.xticks(rotation="vertical")
                plt.grid()
                plt.legend()
                plt.show()
                continue
            elif i==4:
                plt.scatter(b['Emp Id'],b['Emp Age'],marker="+",color="green",label="Emp Id & Age")
                plt.scatter(b['Emp Id'],b['Emp Experience'],marker="o",color="red",label="Emp Id & Experience")
                plt.title("Employee Age with Experience")
                plt.xlabel("Employee Id")
                plt.ylabel("Employee Age & Experience")
                plt.xticks(rotation="vertical")
                plt.grid()
                plt.show()
                continue
            elif i==5:
                plt.bar(b['Emp Experience'],b['Emp Salary'],color="Orange")
                plt.title("Employee Experience")
                plt.xlabel("Employee Experience")
                plt.ylabel("Employee Salary")
                plt.xticks(rotation="vertical")
                plt.grid()
                plt.show()
                continue
            elif i==6:
                plt.barh(b['Emp Id'],b['Emp Salary'],color="Orange")
                plt.title("Employee Salray")
                plt.xlabel("Employee Salary")
                plt.ylabel("Employee Id")
                plt.xticks(rotation="vertical")
                plt.grid()
                plt.show()
                continue
            elif i==7:
                plt.pie(b['Emp Id'],labels=b['Emp Name'],autopct='%0.1f%%',explode=[0,0,0,0,0,0,0,0.6,0,0,0.9,0.2,0,0,0],shadow=True)
                plt.title("Employee Id with Name")
                plt.show()
            elif i==8:
                break
            else:
                print("Enter a correct value. You entered a number out of range (1-8).")
            continue
       
    elif c==5:
        break

    else:
        print("Enter a correct value. You entered a number out of range (1-5).")
        continue  


    
